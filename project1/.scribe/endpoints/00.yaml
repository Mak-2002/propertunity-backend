name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/posts
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"success":false,"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/posts
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      posttype:
        name: posttype
        description: ''
        required: true
        example: rent
        type: string
        enumValues:
          - sale
          - rent
        custom: []
      property_type:
        name: property_type
        description: ''
        required: true
        example: Commercial
        type: string
        enumValues:
          - House
          - Villa
          - Apartment
          - Commercial
          - Land
          - Office
        custom: []
      price:
        name: price
        description: 'This field is required when <code>posttype</code> is <code>sale</code>.'
        required: false
        example: 735.86
        type: number
        enumValues: []
        custom: []
      monthly_rent:
        name: monthly_rent
        description: 'This field is required when <code>posttype</code> is <code>rent</code>.'
        required: false
        example: 1462.459084288
        type: number
        enumValues: []
        custom: []
      max_duration:
        name: max_duration
        description: 'This field is required when <code>posttype</code> is <code>rent</code>.'
        required: false
        example: 19
        type: integer
        enumValues: []
        custom: []
      view_plan_id:
        name: view_plan_id
        description: ''
        required: false
        example: 10
        type: integer
        enumValues: []
        custom: []
      latitude:
        name: latitude
        description: ''
        required: true
        example: 1.1903
        type: number
        enumValues: []
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: 364762.07854247
        type: number
        enumValues: []
        custom: []
      name:
        name: name
        description: ''
        required: true
        example: occaecati
        type: string
        enumValues: []
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: expedita
        type: string
        enumValues: []
        custom: []
      room_count:
        name: room_count
        description: 'This field is required when <code>property_type</code> is <code>House</code>, <code>Villa</code>, <code>Apartment</code>, <code>Commercial</code>, or <code>Office</code>.'
        required: false
        example: 5
        type: integer
        enumValues: []
        custom: []
      bathroom_count:
        name: bathroom_count
        description: 'This field is required when <code>property_type</code> is <code>House</code>, <code>Villa</code>, <code>Apartment</code>, <code>Commercial</code>, or <code>Office</code>.'
        required: false
        example: 19
        type: integer
        enumValues: []
        custom: []
      kitchen_count:
        name: kitchen_count
        description: 'This field is required when <code>property_type</code> is <code>House</code>, <code>Villa</code>, <code>Apartment</code>, <code>Commercial</code>, or <code>Office</code>.'
        required: false
        example: 12
        type: integer
        enumValues: []
        custom: []
      storey:
        name: storey
        description: 'This field is required when <code>property_type</code> is <code>House</code>, <code>Villa</code>, <code>Apartment</code>, <code>Commercial</code>, or <code>Office</code>.'
        required: false
        example: 4
        type: integer
        enumValues: []
        custom: []
      area:
        name: area
        description: ''
        required: true
        example: voluptate
        type: string
        enumValues: []
        custom: []
      about:
        name: about
        description: 'Must not be greater than 500 characters.'
        required: true
        example: fllwtwxcybzh
        type: string
        enumValues: []
        custom: []
      balkony:
        name: balkony
        description: ''
        required: false
        example: 4
        type: integer
        enumValues: []
        custom: []
      gym:
        name: gym
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        custom: []
      pool:
        name: pool
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        custom: []
      parking:
        name: parking
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        custom: []
      security_cameras:
        name: security_cameras
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        custom: []
      elevator:
        name: elevator
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        custom: []
      Wi-Fi:
        name: Wi-Fi
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        custom: []
      security_gard:
        name: security_gard
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        custom: []
      garden:
        name: garden
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        custom: []
    cleanBodyParameters:
      posttype: rent
      property_type: Commercial
      price: 735.86
      monthly_rent: 1462.459084288
      max_duration: 19
      view_plan_id: 10
      latitude: 1.1903
      longitude: 364762.07854247
      name: occaecati
      address: expedita
      room_count: 5
      bathroom_count: 19
      kitchen_count: 12
      storey: 4
      area: voluptate
      about: fllwtwxcybzh
      balkony: 4
      gym: false
      pool: true
      parking: false
      security_cameras: true
      elevator: false
      Wi-Fi: false
      security_gard: true
      garden: true
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/posts/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: praesentium
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: praesentium
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"success":false,"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/posts/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: non
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: non
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      posttype:
        name: posttype
        description: ''
        required: false
        example: sale
        type: string
        enumValues:
          - sale
          - rent
        custom: []
      property_type:
        name: property_type
        description: ''
        required: false
        example: Villa
        type: string
        enumValues:
          - House
          - Villa
          - Apartment
          - Commercial
          - Land
          - Office
        custom: []
      price:
        name: price
        description: ''
        required: false
        example: 5203003.4
        type: number
        enumValues: []
        custom: []
      monthly_rent:
        name: monthly_rent
        description: ''
        required: false
        example: 509535.77105984
        type: number
        enumValues: []
        custom: []
      max_duration:
        name: max_duration
        description: ''
        required: false
        example: 10
        type: integer
        enumValues: []
        custom: []
      view_plan_id:
        name: view_plan_id
        description: ''
        required: false
        example: 7
        type: integer
        enumValues: []
        custom: []
      name:
        name: name
        description: ''
        required: false
        example: nihil
        type: string
        enumValues: []
        custom: []
      address:
        name: address
        description: ''
        required: false
        example: temporibus
        type: string
        enumValues: []
        custom: []
      room_count:
        name: room_count
        description: ''
        required: false
        example: 12
        type: integer
        enumValues: []
        custom: []
      bathroom_count:
        name: bathroom_count
        description: ''
        required: false
        example: 6
        type: integer
        enumValues: []
        custom: []
      kitchen_count:
        name: kitchen_count
        description: ''
        required: false
        example: 20
        type: integer
        enumValues: []
        custom: []
      storey:
        name: storey
        description: ''
        required: false
        example: 1
        type: integer
        enumValues: []
        custom: []
      area:
        name: area
        description: ''
        required: false
        example: 890792.8204435
        type: number
        enumValues: []
        custom: []
      about:
        name: about
        description: 'Must not be greater than 500 characters.'
        required: false
        example: rzm
        type: string
        enumValues: []
        custom: []
      balkony:
        name: balkony
        description: ''
        required: false
        example: 13
        type: integer
        enumValues: []
        custom: []
      gym:
        name: gym
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        custom: []
      pool:
        name: pool
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        custom: []
      parking:
        name: parking
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        custom: []
      security_cameras:
        name: security_cameras
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        custom: []
      elevator:
        name: elevator
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        custom: []
      Wi-Fi:
        name: Wi-Fi
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        custom: []
      security_gard:
        name: security_gard
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        custom: []
      garden:
        name: garden
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        custom: []
    cleanBodyParameters:
      posttype: sale
      property_type: Villa
      price: 5203003.4
      monthly_rent: 509535.77105984
      max_duration: 10
      view_plan_id: 7
      name: nihil
      address: temporibus
      room_count: 12
      bathroom_count: 6
      kitchen_count: 20
      storey: 1
      area: 890792.8204435
      about: rzm
      balkony: 13
      gym: true
      pool: true
      parking: true
      security_cameras: true
      elevator: false
      Wi-Fi: true
      security_gard: false
      garden: false
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/posts/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: accusamus
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: accusamus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/properties/{property}/images'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      property:
        name: property
        description: 'The property.'
        required: true
        example: rerum
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      property: rerum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"success":false,"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/properties/{property}/images'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      property:
        name: property
        description: 'The property.'
        required: true
        example: ex
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      property: ex
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      image:
        name: image
        description: 'Must be an image.'
        required: true
        example: null
        type: file
        enumValues: []
        custom: []
    cleanBodyParameters: []
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/properties/{property}/images/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      property:
        name: property
        description: 'The property.'
        required: true
        example: sit
        type: string
        enumValues: []
        custom: []
      id:
        name: id
        description: 'The ID of the image.'
        required: true
        example: 8
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      property: sit
      id: 8
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"success":false,"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/properties/{property}/images/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      property:
        name: property
        description: 'The property.'
        required: true
        example: esse
        type: string
        enumValues: []
        custom: []
      id:
        name: id
        description: 'The ID of the image.'
        required: true
        example: 11
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      property: esse
      id: 11
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/properties/{property}/images/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      property:
        name: property
        description: 'The property.'
        required: true
        example: occaecati
        type: string
        enumValues: []
        custom: []
      id:
        name: id
        description: 'The ID of the image.'
        required: true
        example: 18
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      property: occaecati
      id: 18
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/myposts
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieves all the property posts made by user'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"success":false,"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/myposts/changevisibility/{post}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      post:
        name: post
        description: ''
        required: true
        example: consequuntur
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      post: consequuntur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/favorites
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"success":false,"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/posts/{post}/favorite'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      post:
        name: post
        description: 'The post.'
        required: true
        example: '4'
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      post: '4'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/pay/{post}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      post:
        name: post
        description: ''
        required: true
        example: aliquam
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      post: aliquam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/profile
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"success":false,"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: api/profile/edit
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: false
        example: corrupti
        type: string
        enumValues: []
        custom: []
      password:
        name: password
        description: 'Must be at least 6 characters.'
        required: false
        example: Xy6K73mUsn
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: corrupti
      password: Xy6K73mUsn
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/profile/uploadphoto
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      image:
        name: image
        description: 'Must be an image.'
        required: true
        example: null
        type: file
        enumValues: []
        custom: []
    cleanBodyParameters: []
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/getpendingposts
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"success":false,"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/approverequest/{viewRequest}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      viewRequest:
        name: viewRequest
        description: ''
        required: true
        example: quia
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      viewRequest: quia
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/rejectrequest/{viewRequest}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      viewRequest:
        name: viewRequest
        description: ''
        required: true
        example: nesciunt
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      viewRequest: nesciunt
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/rate/{post_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      post_id:
        name: post_id
        description: 'The ID of the post.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      post_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/adminlogin
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/verification
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
